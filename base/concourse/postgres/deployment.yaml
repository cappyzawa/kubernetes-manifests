apiVersion: apps/v1
kind: Deployment
metadata:
  name: concourse-postgresql
  labels:
    app: concourse-postgresql
spec:
  selector:
    matchLabels:
      app: concourse-postgresql
  template:
    metadata:
      labels:
        app: concourse-postgresql
    spec:
      containers:
        - name: concourse-postgresql
          image: "postgres:9.6.2"
          imagePullPolicy: IfNotPresent
          env:
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  name: concourse-postgresql
                  key: postgres-user
            - name: PGUSER
              valueFrom:
                configMapKeyRef:
                  name: concourse-postgresql
                  key: pguser
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: concourse-postgresql
                  key: postgres-db
            - name: POSTGRES_INITDB_ARGS
              valueFrom:
                configMapKeyRef:
                  name: concourse-postgresql
                  key: postgres-initdb-args
            - name: PGDATA
              valueFrom:
                configMapKeyRef:
                  name: concourse-postgresql
                  key: pgdata
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: postgres-password
                  name: concourse-postgresql
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          ports:
            - containerPort: 5432
              name: postgresql
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
          volumeMounts:
            - mountPath: $(PGDATA)
              name: data
              subPath: postgresql-db
      volumes:
        - name: data
          hostPath:
            path: /tmp/data
            type: DirectoryOrCreate
