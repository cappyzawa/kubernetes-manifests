apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: concourse-worker
spec:
  serviceName: concourse-worker
  replicas: 2
  selector:
    matchLabels:
      app: concourse-worker
  template:
    metadata:
      labels:
        app: concourse-worker
    spec:
      serviceAccountName: concourse-worker
      tolerations: []
      terminationGracePeriodSeconds: 60
      containers:
        - name: concourse-worker
          image: "concourse/concourse:4.2.2"
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
          args:
            - -c
            - |-
              cp /dev/null /tmp/.liveness_prove
              rm -rf ${CONCOURSE_WORKER_DIR}
              while ! concourse retire-worker --name=${HOSTNAME} | grep -q worker-not-found; do
                touch /tmp/.pre_start_cleanup
                sleep 5
              done
              rm -f /tmp/.pre_start_cleanup
              concourse worker --name=${HOSTNAME} | tee -a /tmp/.liveness_prove
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - |-
                  FATAL_ERRORS=$( echo "{LIVENESS_PROBE_FATAL_ERRORS}" | grep -q '\S' && \
                    grep -F "${LIVENESS_PROBE_FATAL_ERRORS}" /tmp/.liveness_probe )
                  cp /dev/null /tmp/.liveness_probe
                  if [ ! -z "${FATAL_ERRORS}" ]; then
                    >&2 echo "Fatal error detected: ${FATAL_ERRORS}"
                    exit 1
                  fi
                  if [ -f /tmp/.pre_start_cleanup ]; then
                    >&2 echo "Still trying to clean up before starting concourse. 'fly prune-worker -w ${HOSTNAME}' might need to be called to force cleanup."
                    exit 1
                  fi
            failureThreshold: 1
            initialDelaySeconds: 10
            periodSeconds: 10
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - |-
                    while ! concourse retire-worker --name=${HOSTNAME} | grep -q worker-not-found; do
                      sleep 5
                    done
          env:
            - name: CONCOURSE_WORK_DIR
              value: "/concourse-work-dir"
            - name: CONCOURSE_TSA_HOST
              value: "concourse-web:2222"
            - name: CONCOURSE_TSA_PUBLIC_KEY
              value: "/concourse-keys/host_key.pub"
            - name: CONCOURSE_TSA_WORKER_PRIVATE_KEY
              value: "/concourse-keys/worker_key"
            - name: CONCOURSE_GARDEN_BIND_PORT
              value: "7777"
            - name: CONCOURSE_BAGGAGECLAIM_DRIVER
              valueFrom:
                configMapKeyRef:
                  key: baggageclaim-driver
                  name: concourse-worker
            - name: CONCOURSE_EPHEMERAL
              valueFrom:
                configMapKeyRef:
                  key: ephemeral
                  name: concourse-worker
            - name: CONCOURSE_LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  key: log-level
                  name: concourse-worker
            - name: CONCOURSE_GARDEN_LOG_LEVEL
              value: $(CONCOURSE_LOG_LEVEL)
            - name: CONCOURSE_BAGGAGECLAIM_LOG_LEVEL
              value: $(CONCOURSE_LOG_LEVEL)
            - name: LIVENESS_PROBE_FATAL_ERRORS
              value: "guardian.api.garden-server.create.failed\nbaggageclaim.api.volume-server.create-volume-async.failed-to-create"
          resources:
            requests:
              cpu: 100m
              memory: 512Mi
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /concourse-keys
              name: concourse-keys
              readOnly: true
            - mountPath: /concourse-work-dir
              name: concourse-work-dir
      volumes:
        - name: concourse-keys
          secret:
            secretName: concourse
            defaultMode: 0400
            items:
            - key: host-key-pub
              path: host_key.pub
            - key: worker-key
              path: worker_key
            - key: worker-key-pub
              path: worker_key.pub
        - name: concourse-work-dir
          hostPath:
            path: /tmp/concourse-work-dir
            type: DirectoryOrCreate
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
